// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calendar.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event struct {
	Id                   uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Duration             *duration.Duration   `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Description          string               `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Event) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Event) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *Event) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Events struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Events) Reset()         { *m = Events{} }
func (m *Events) String() string { return proto.CompactTextString(m) }
func (*Events) ProtoMessage()    {}
func (*Events) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{1}
}

func (m *Events) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Events.Unmarshal(m, b)
}
func (m *Events) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Events.Marshal(b, m, deterministic)
}
func (m *Events) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Events.Merge(m, src)
}
func (m *Events) XXX_Size() int {
	return xxx_messageInfo_Events.Size(m)
}
func (m *Events) XXX_DiscardUnknown() {
	xxx_messageInfo_Events.DiscardUnknown(m)
}

var xxx_messageInfo_Events proto.InternalMessageInfo

func (m *Events) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type ID struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{2}
}

func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (m *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(m, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Succesfull struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Succesfull) Reset()         { *m = Succesfull{} }
func (m *Succesfull) String() string { return proto.CompactTextString(m) }
func (*Succesfull) ProtoMessage()    {}
func (*Succesfull) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{3}
}

func (m *Succesfull) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Succesfull.Unmarshal(m, b)
}
func (m *Succesfull) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Succesfull.Marshal(b, m, deterministic)
}
func (m *Succesfull) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Succesfull.Merge(m, src)
}
func (m *Succesfull) XXX_Size() int {
	return xxx_messageInfo_Succesfull.Size(m)
}
func (m *Succesfull) XXX_DiscardUnknown() {
	xxx_messageInfo_Succesfull.DiscardUnknown(m)
}

var xxx_messageInfo_Succesfull proto.InternalMessageInfo

func (m *Succesfull) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type GetEventRes struct {
	// Types that are valid to be assigned to Result:
	//	*GetEventRes_Event
	//	*GetEventRes_Error
	Result               isGetEventRes_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetEventRes) Reset()         { *m = GetEventRes{} }
func (m *GetEventRes) String() string { return proto.CompactTextString(m) }
func (*GetEventRes) ProtoMessage()    {}
func (*GetEventRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{4}
}

func (m *GetEventRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventRes.Unmarshal(m, b)
}
func (m *GetEventRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventRes.Marshal(b, m, deterministic)
}
func (m *GetEventRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventRes.Merge(m, src)
}
func (m *GetEventRes) XXX_Size() int {
	return xxx_messageInfo_GetEventRes.Size(m)
}
func (m *GetEventRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventRes proto.InternalMessageInfo

type isGetEventRes_Result interface {
	isGetEventRes_Result()
}

type GetEventRes_Event struct {
	Event *Event `protobuf:"bytes,1,opt,name=event,proto3,oneof"`
}

type GetEventRes_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*GetEventRes_Event) isGetEventRes_Result() {}

func (*GetEventRes_Error) isGetEventRes_Result() {}

func (m *GetEventRes) GetResult() isGetEventRes_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetEventRes) GetEvent() *Event {
	if x, ok := m.GetResult().(*GetEventRes_Event); ok {
		return x.Event
	}
	return nil
}

func (m *GetEventRes) GetError() string {
	if x, ok := m.GetResult().(*GetEventRes_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetEventRes) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetEventRes_Event)(nil),
		(*GetEventRes_Error)(nil),
	}
}

type UpdatedRes struct {
	// Types that are valid to be assigned to Result:
	//	*UpdatedRes_Ok
	//	*UpdatedRes_Error
	Result               isUpdatedRes_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UpdatedRes) Reset()         { *m = UpdatedRes{} }
func (m *UpdatedRes) String() string { return proto.CompactTextString(m) }
func (*UpdatedRes) ProtoMessage()    {}
func (*UpdatedRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{5}
}

func (m *UpdatedRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatedRes.Unmarshal(m, b)
}
func (m *UpdatedRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatedRes.Marshal(b, m, deterministic)
}
func (m *UpdatedRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatedRes.Merge(m, src)
}
func (m *UpdatedRes) XXX_Size() int {
	return xxx_messageInfo_UpdatedRes.Size(m)
}
func (m *UpdatedRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatedRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatedRes proto.InternalMessageInfo

type isUpdatedRes_Result interface {
	isUpdatedRes_Result()
}

type UpdatedRes_Ok struct {
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3,oneof"`
}

type UpdatedRes_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*UpdatedRes_Ok) isUpdatedRes_Result() {}

func (*UpdatedRes_Error) isUpdatedRes_Result() {}

func (m *UpdatedRes) GetResult() isUpdatedRes_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *UpdatedRes) GetOk() bool {
	if x, ok := m.GetResult().(*UpdatedRes_Ok); ok {
		return x.Ok
	}
	return false
}

func (m *UpdatedRes) GetError() string {
	if x, ok := m.GetResult().(*UpdatedRes_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UpdatedRes) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UpdatedRes_Ok)(nil),
		(*UpdatedRes_Error)(nil),
	}
}

func init() {
	proto.RegisterType((*Event)(nil), "calendar.Event")
	proto.RegisterType((*Events)(nil), "calendar.Events")
	proto.RegisterType((*ID)(nil), "calendar.ID")
	proto.RegisterType((*Succesfull)(nil), "calendar.Succesfull")
	proto.RegisterType((*GetEventRes)(nil), "calendar.GetEventRes")
	proto.RegisterType((*UpdatedRes)(nil), "calendar.UpdatedRes")
}

func init() { proto.RegisterFile("calendar.proto", fileDescriptor_e3d25d49f056cdb2) }

var fileDescriptor_e3d25d49f056cdb2 = []byte{
	// 377 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xd1, 0x6e, 0xa2, 0x40,
	0x14, 0x15, 0x44, 0x82, 0x97, 0x8d, 0xbb, 0x99, 0xb8, 0x1b, 0x96, 0x6c, 0xb6, 0x84, 0x97, 0xf2,
	0x04, 0xd1, 0xb6, 0xef, 0x8d, 0xda, 0x54, 0x5f, 0xa7, 0x6d, 0xd2, 0xf4, 0x0d, 0xe1, 0x6a, 0x88,
	0xe8, 0x90, 0x61, 0xf0, 0x7b, 0xfa, 0x53, 0xfd, 0x9f, 0x86, 0x41, 0x84, 0xa8, 0x4d, 0xdf, 0xb8,
	0xf7, 0x9c, 0x7b, 0xce, 0x3d, 0x97, 0x81, 0x41, 0x14, 0xa6, 0xb8, 0x8b, 0x43, 0xee, 0x67, 0x9c,
	0x09, 0x46, 0x8c, 0xba, 0xb6, 0xaf, 0xd6, 0x8c, 0xad, 0x53, 0x0c, 0x64, 0x7f, 0x59, 0xac, 0x02,
	0x91, 0x6c, 0x31, 0x17, 0xe1, 0x36, 0xab, 0xa8, 0xf6, 0xff, 0x53, 0x42, 0x5c, 0xf0, 0x50, 0x24,
	0x6c, 0x57, 0xe1, 0xee, 0xbb, 0x02, 0xbd, 0x87, 0x3d, 0xee, 0x04, 0x19, 0x80, 0x9a, 0xc4, 0x96,
	0xe2, 0x28, 0x9e, 0x46, 0xd5, 0x24, 0x26, 0x3e, 0x68, 0x71, 0x28, 0xd0, 0x52, 0x1d, 0xc5, 0x33,
	0xc7, 0xb6, 0x5f, 0x09, 0xf9, 0xb5, 0x90, 0xff, 0x5c, 0x3b, 0x51, 0xc9, 0x23, 0x77, 0x60, 0xd4,
	0xda, 0x56, 0x57, 0xce, 0xfc, 0x3d, 0x9b, 0x99, 0x1d, 0x08, 0xf4, 0x48, 0x25, 0x0e, 0x98, 0x31,
	0xe6, 0x11, 0x4f, 0x32, 0x39, 0xa9, 0x39, 0x8a, 0xd7, 0xa7, 0xed, 0x96, 0x3b, 0x02, 0x5d, 0x6e,
	0x98, 0x93, 0x6b, 0xd0, 0x51, 0x7e, 0x59, 0x8a, 0xd3, 0xf5, 0xcc, 0xf1, 0x4f, 0xff, 0x78, 0x18,
	0xc9, 0xa0, 0x07, 0xd8, 0x1d, 0x82, 0xba, 0x98, 0xb5, 0x12, 0x75, 0xcb, 0x44, 0xee, 0x3f, 0x80,
	0xa7, 0x22, 0x8a, 0x30, 0x5f, 0x15, 0x69, 0x5a, 0xa2, 0x6c, 0x23, 0x51, 0x83, 0xaa, 0x6c, 0xe3,
	0xbe, 0x82, 0xf9, 0x88, 0xa2, 0xd2, 0xc1, 0xd2, 0xab, 0x27, 0xc5, 0x24, 0xe3, 0xdc, 0x6a, 0xde,
	0xa1, 0x15, 0x4e, 0xfe, 0x40, 0x0f, 0x39, 0x67, 0x5c, 0x1e, 0xaa, 0x2f, 0xfb, 0x65, 0x39, 0x31,
	0x40, 0xe7, 0x98, 0x17, 0xa9, 0x70, 0xef, 0x01, 0x5e, 0xb2, 0xf2, 0x46, 0x71, 0x29, 0xfc, 0xab,
	0xf1, 0x9d, 0x77, 0x4a, 0xe7, 0xef, 0x15, 0xc6, 0x1f, 0x0a, 0x18, 0xd3, 0x83, 0x3f, 0x09, 0xc0,
	0x9c, 0x72, 0x0c, 0x05, 0x56, 0xff, 0xed, 0x74, 0x33, 0xfb, 0xb4, 0x41, 0x02, 0x30, 0xea, 0x64,
	0xe4, 0x47, 0x03, 0x2e, 0x66, 0xf6, 0xef, 0xa6, 0x6a, 0x67, 0xbf, 0x05, 0xb3, 0x5a, 0xf8, 0x0b,
	0x87, 0x61, 0xd3, 0x68, 0x05, 0x1b, 0x81, 0x49, 0x71, 0xcb, 0xf6, 0x78, 0xc9, 0xe9, 0xe2, 0xc8,
	0x44, 0x7f, 0xd3, 0xd6, 0x3c, 0x8b, 0x96, 0xba, 0x7c, 0x21, 0x37, 0x9f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x23, 0xbb, 0x38, 0x35, 0xe9, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalendarClient is the client API for Calendar service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalendarClient interface {
	CreateEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Event, error)
	GetEvent(ctx context.Context, in *ID, opts ...grpc.CallOption) (*GetEventRes, error)
	UpdateEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*UpdatedRes, error)
	RemoveEvent(ctx context.Context, in *ID, opts ...grpc.CallOption) (*UpdatedRes, error)
}

type calendarClient struct {
	cc *grpc.ClientConn
}

func NewCalendarClient(cc *grpc.ClientConn) CalendarClient {
	return &calendarClient{cc}
}

func (c *calendarClient) CreateEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Event, error) {
	out := new(Event)
	err := c.cc.Invoke(ctx, "/calendar.Calendar/CreateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) GetEvent(ctx context.Context, in *ID, opts ...grpc.CallOption) (*GetEventRes, error) {
	out := new(GetEventRes)
	err := c.cc.Invoke(ctx, "/calendar.Calendar/GetEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) UpdateEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*UpdatedRes, error) {
	out := new(UpdatedRes)
	err := c.cc.Invoke(ctx, "/calendar.Calendar/UpdateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) RemoveEvent(ctx context.Context, in *ID, opts ...grpc.CallOption) (*UpdatedRes, error) {
	out := new(UpdatedRes)
	err := c.cc.Invoke(ctx, "/calendar.Calendar/RemoveEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalendarServer is the server API for Calendar service.
type CalendarServer interface {
	CreateEvent(context.Context, *Event) (*Event, error)
	GetEvent(context.Context, *ID) (*GetEventRes, error)
	UpdateEvent(context.Context, *Event) (*UpdatedRes, error)
	RemoveEvent(context.Context, *ID) (*UpdatedRes, error)
}

// UnimplementedCalendarServer can be embedded to have forward compatible implementations.
type UnimplementedCalendarServer struct {
}

func (*UnimplementedCalendarServer) CreateEvent(ctx context.Context, req *Event) (*Event, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEvent not implemented")
}
func (*UnimplementedCalendarServer) GetEvent(ctx context.Context, req *ID) (*GetEventRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvent not implemented")
}
func (*UnimplementedCalendarServer) UpdateEvent(ctx context.Context, req *Event) (*UpdatedRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEvent not implemented")
}
func (*UnimplementedCalendarServer) RemoveEvent(ctx context.Context, req *ID) (*UpdatedRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveEvent not implemented")
}

func RegisterCalendarServer(s *grpc.Server, srv CalendarServer) {
	s.RegisterService(&_Calendar_serviceDesc, srv)
}

func _Calendar_CreateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).CreateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.Calendar/CreateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).CreateEvent(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_GetEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).GetEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.Calendar/GetEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).GetEvent(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_UpdateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).UpdateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.Calendar/UpdateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).UpdateEvent(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_RemoveEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).RemoveEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.Calendar/RemoveEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).RemoveEvent(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _Calendar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calendar.Calendar",
	HandlerType: (*CalendarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEvent",
			Handler:    _Calendar_CreateEvent_Handler,
		},
		{
			MethodName: "GetEvent",
			Handler:    _Calendar_GetEvent_Handler,
		},
		{
			MethodName: "UpdateEvent",
			Handler:    _Calendar_UpdateEvent_Handler,
		},
		{
			MethodName: "RemoveEvent",
			Handler:    _Calendar_RemoveEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calendar.proto",
}
